import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import TimeoutException
import time

# ---------------- Setup ----------------
chrome_options = Options()
chrome_options.add_argument("--start-maximized")

service = Service(r"C:\Users\Lenovo\Downloads\chromedriver-win64 (1)\chromedriver-win64\chromedriver.exe")
driver = webdriver.Chrome(service=service, options=chrome_options)

driver.get("https://www.rewe.de/shop")
time.sleep(3)

# Click initial entry button
WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
).click()

# ---------------- Zip codes list ----------------

zip_codes = [
'78739', '78737','78989', '78988', '78987', '78986', '78985', '78984', '78983', '78982', '78981', '78980',
'78979', '78978', '78977', '78976', '78975', '78974', '78973', '78972', '78971', '78970',
'78969', '78968', '78967', '78966', '78965', '78964', '78963', '78962', '78961', '78960',
'78959', '78958', '78957', '78956', '78955', '78954', '78953', '78952', '78951', '78950',
'78949', '78948', '78947', '78946', '78945', '78944', '78943', '78942', '78941', '78940',
'78939', '78938', '78937', '78936', '78935', '78934', '78933', '78932', '78931', '78930',
'78929', '78928', '78927', '78926', '78925', '78924', '78923', '78922', '78921', '78920',
'78919', '78918', '78917', '78916', '78915', '78914', '78913', '78912', '78911', '78910',
'78909', '78908', '78907', '78906', '78905', '78904', '78903', '78902', '78901', '78900',
'78899', '78898', '78897', '78896', '78895', '78894', '78893', '78892', '78891', '78890',
'78889', '78888', '78887', '78886', '78885', '78884', '78883', '78882', '78881', '78880',
'78879', '78878', '78877', '78876', '78875', '78874', '78873', '78872', '78871', '78870',
'78869', '78868', '78867', '78866', '78865', '78864', '78863', '78862', '78861', '78860',
'78859', '78858', '78857', '78856', '78855', '78854', '78853', '78852', '78851', '78850',
'78849', '78848', '78847', '78846', '78845', '78844', '78843', '78842', '78841', '78840',
'78839', '78838', '78837', '78836', '78835', '78834', '78833', '78832', '78831', '78830',
'78829', '78828', '78827', '78826', '78825', '78824', '78823', '78822', '78821', '78820',
'78819', '78818', '78817', '78816', '78815', '78814', '78813', '78812', '78811', '78810',
'78809', '78808', '78807', '78806', '78805', '78804', '78803', '78802', '78801', '78800',
'78799', '78798', '78797', '78796', '78795', '78794', '78793', '78792', '78791', '78790',
'78789', '78788', '78787', '78786', '78785', '78784', '78783', '78782', '78781', '78780',
'78779', '78778', '78777', '78776', '78775', '78774', '78773', '78772', '78771', '78770',
'78769', '78768', '78767', '78766', '78765', '78764', '78763', '78762', '78761', '78760',
'78759', '78758', '78757', '78756', '78755', '78754', '78753', '78752', '78751', '78750',
'78749', '78748', '78747', '78746', '78745', '78744', '78743', '78742', '78741', '78740',
'78738', '78736', '78735', '78734', '78733', '78732', '78731', '78730',
'78729', '78728', '78727', '78726', '78725', '78724', '78723', '78722', '78721', '78720',
'78719', '78718', '78717', '78716', '78715', '78714', '78713', '78712', '78711', '78710',
'78709', '78708', '78707', '78706', '78705', '78704', '78703', '78702', '78701', '78700',
'78699', '78698', '78697', '78696', '78695', '78694', '78693', '78692', '78691', '78690',
'78689', '78688', '78687', '78686', '78685', '78684', '78683', '78682', '78681', '78680',
'78679', '78678', '78677', '78676', '78675', '78674', '78673', '78672', '78671', '78670',
'78669', '78668', '78667', '78666', '78665', '78664', '78663', '78662', '78661', '78660',
'78659', '78658', '78657', '78656', '78655', '78654', '78653', '78652', '78651', '78650',
'78649', '78648', '78647', '78646', '78645', '78644', '78643', '78642', '78641', '78640',
'78639', '78638', '78637', '78636', '78635', '78634', '78633', '78632', '78631', '78630',
'78629', '78628', '78627', '78626', '78625', '78624', '78623', '78622', '78621', '78620',
'78619', '78618', '78617', '78616', '78615', '78614', '78613', '78612', '78611', '78610',
'78609', '78608', '78607', '78606', '78605', '78604', '78603', '78602', '78601', '78600',
'78599', '78598', '78597', '78596', '78595', '78594', '78593', '78592', '78591', '78590',
'78589', '78588', '78587', '78586', '78585', '78584', '78583', '78582', '78581', '78580',
'78579', '78578', '78577', '78576', '78575', '78574', '78573', '78572', '78571', '78570',
'78569', '78568', '78567', '78566', '78565', '78564', '78563', '78562', '78561', '78560',
'78559', '78558', '78557', '78556', '78555', '78554', '78553', '78552', '78551', '78550',
'78549', '78548', '78547', '78546', '78545', '78544', '78543', '78542', '78541', '78540',
'78539', '78538', '78537', '78536', '78535', '78534', '78533', '78532', '78531', '78530',
'78529', '78528', '78527', '78526', '78525', '78524', '78523', '78522', '78521', '78520',
'78519', '78518', '78517', '78516', '78515', '78514', '78513', '78512', '78511', '78510',
'78509', '78508', '78507', '78506', '78505', '78504', '78503', '78502', '78501', '78500',
'78499', '78498', '78497', '78496', '78495', '78494', '78493', '78492', '78491', '78490',
'78489', '78488', '78487', '78486', '78485', '78484', '78483', '78482', '78481', '78480',
'78479', '78478', '78477', '78476', '78475', '78474', '78473', '78472', '78471', '78470',
'78469', '78468', '78467', '78466', '78465', '78464', '78463', '78462', '78461', '78460',
'78459', '78458', '78457', '78456', '78455', '78454', '78453', '78452', '78451', '78450',
'78449', '78448', '78447', '78446', '78445', '78444', '78443', '78442', '78441', '78440',
'78439', '78438', '78437', '78436', '78435', '78434', '78433', '78432', '78431', '78430',
'78429', '78428', '78427', '78426', '78425', '78424', '78423', '78422', '78421', '78420',
'78419', '78418', '78417', '78416', '78415', '78414', '78413', '78412', '78411', '78410',
'78409', '78408', '78407', '78406', '78405', '78404', '78403', '78402', '78401', '78400',
'78399', '78398', '78397', '78396', '78395', '78394', '78393', '78392', '78391', '78390',
'78389', '78388', '78387', '78386', '78385', '78384', '78383', '78382', '78381', '78380',
'78379', '78378', '78377', '78376', '78375', '78374', '78373', '78372', '78371', '78370',
'78369', '78368', '78367', '78366', '78365', '78364', '78363', '78362', '78361', '78360',
'78359', '78358', '78357', '78356', '78355', '78354', '78353', '78352', '78351', '78350',
'78349', '78348', '78347', '78346', '78345', '78344', '78343', '78342', '78341', '78340',
'78339', '78338', '78337', '78336', '78335', '78334', '78333', '78332', '78331', '78330',
'78329', '78328', '78327', '78326', '78325', '78324', '78323', '78322', '78321', '78320',
'78319', '78318', '78317', '78316', '78315', '78314', '78313', '78312', '78311', '78310',
'78309', '78308', '78307', '78306', '78305', '78304', '78303', '78302', '78301', '78300',
'78299', '78298', '78297', '78296', '78295', '78294', '78293', '78292', '78291', '78290',
'78289', '78288', '78287', '78286', '78285', '78284', '78283', '78282', '78281', '78280',
'78279', '78278', '78277', '78276', '78275', '78274', '78273', '78272', '78271', '78270',
'78269', '78268', '78267', '78266', '78265', '78264', '78263', '78262', '78261', '78260',
'78259', '78258', '78257', '78256', '78255', '78254', '78253', '78252', '78251', '78250',
'78249', '78248', '78247', '78246', '78245', '78244', '78243', '78242', '78241', '78240',
'78239', '78238', '78237', '78236', '78235', '78234', '78233', '78232', '78231', '78230',
'78229', '78228', '78227', '78226', '78225', '78224', '78223', '78222', '78221', '78220',
'78219', '78218', '78217', '78216', '78215', '78214', '78213', '78212', '78211', '78210',
'78209', '78208', '78207', '78206', '78205', '78204', '78203', '78202', '78201', '78200',
'78199', '78198', '78197', '78196', '78195', '78194', '78193', '78192', '78191', '78190',
'78189', '78188', '78187', '78186', '78185', '78184', '78183', '78182', '78181', '78180',
'78179', '78178', '78177', '78176', '78175', '78174', '78173', '78172', '78171', '78170',
'78169', '78168', '78167', '78166', '78165', '78164', '78163', '78162', '78161', '78160',
'78159', '78158', '78157', '78156', '78155', '78154', '78153', '78152', '78151', '78150',
'78149', '78148', '78147', '78146', '78145', '78144', '78143', '78142', '78141', '78140',
'78139', '78138', '78137', '78136', '78135', '78134', '78133', '78132', '78131', '78130',
'78129', '78128', '78127', '78126', '78125', '78124', '78123', '78122', '78121', '78120',
'78119', '78118', '78117', '78116', '78115', '78114', '78113', '78112', '78111', '78110',
'78109', '78108', '78107', '78106', '78105', '78104', '78103', '78102', '78101', '78100',
'78099', '78098', '78097', '78096', '78095', '78094', '78093', '78092', '78091', '78090',
'78089', '78088', '78087', '78086', '78085', '78084', '78083', '78082', '78081', '78080',
'78079', '78078', '78077', '78076', '78075', '78074', '78073', '78072', '78071', '78070',
'78069', '78068', '78067', '78066', '78065', '78064', '78063', '78062', '78061', '78060',
'78059', '78058', '78057', '78056', '78055', '78054', '78053', '78052', '78051', '78050',
'78049', '78048', '78047', '78046', '78045', '78044', '78043', '78042', '78041', '78040',
'78039', '78038', '78037', '78036', '78035', '78034', '78033', '78032', '78031', '78030',
'78029', '78028', '78027', '78026', '78025', '78024', '78023', '78022', '78021', '78020',
'78019', '78018', '78017', '78016', '78015', '78014', '78013', '78012', '78011', '78010',
'78009', '78008', '78007', '78006', '78005', '78004', '78003', '78002', '78001', '78000',
'77999', '77998', '77997', '77996', '77995', '77994', '77993', '77992', '77991', '77990'
]



# Store results here
results = []

# ---------------- Loop through zip codes ----------------
for zc in zip_codes:
    try:
        print(f"\nProcessing zip code: {zc}")

        # Step 1: Enter zip code
        try:
            zip_input = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-zipcode-input"))
            )
            zip_input.clear()
            zip_input.send_keys(zc + Keys.ENTER)
        except TimeoutException:
            print("Zip input not available, maybe we're already in checkout flow.")

        time.sleep(2)

        # Step 2: Check for available buttons
        try:
            element = WebDriverWait(driver, 5).until(
                EC.any_of(
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-back-button")),
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-change-zipcode-link"))
                )
            )
            # ✅ If found → availability = Yes
            results.append({"zipcode": zc, "availability": "Yes"})

            # Re-find element to avoid stale reference
            element = driver.find_element(By.CLASS_NAME, element.get_attribute("class").split()[0])

            if "gbmc-back-button" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> back button present.")
                element.click()
            elif "gbmc-change-zipcode-link" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> change zip link present.")
                element.click()

        except TimeoutException:
            # ❌ If not found → availability = No
            print(f"Neither back nor change-zip buttons present for zip {zc}, marking as No...")
            results.append({"zipcode": zc, "availability": "No"})

            # Recovery flow
            try:
                headed_back = WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-headed-back-button"))
                )
                headed_back.click()
                time.sleep(1)

                WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
                ).click()
                time.sleep(1)
                print(f"Recovered successfully for zip {zc}")

            except Exception:
                print(f"Recovery failed for zip {zc}")
                continue

    except Exception as e:
        print(f"Unexpected error with zip {zc}: {e}")
        results.append({"zipcode": zc, "availability": "No"})

time.sleep(5)
driver.quit()

# ---------------- Save results ----------------
df = pd.DataFrame(results)
df.to_csv("zipcode_availability23000.csv", index=False)
print("\n✅ Dataset saved as zip_availability.csv")

import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import TimeoutException
import time

# ---------------- Setup ----------------
chrome_options = Options()
chrome_options.add_argument("--start-maximized")

service = Service(r"C:\Users\Lenovo\Downloads\chromedriver-win64 (1)\chromedriver-win64\chromedriver.exe")
driver = webdriver.Chrome(service=service, options=chrome_options)

driver.get("https://www.rewe.de/shop")
time.sleep(3)

# Click initial entry button
WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
).click()

# ---------------- Zip codes list ----------------

zip_codes = [
'76891', '76889','76989', '76988', '76987', '76986', '76985', '76984', '76983', '76982', '76981', '76980',
'76979', '76978', '76977', '76976', '76975', '76974', '76973', '76972', '76971', '76970',
'76969', '76968', '76967', '76966', '76965', '76964', '76963', '76962', '76961', '76960',
'76959', '76958', '76957', '76956', '76955', '76954', '76953', '76952', '76951', '76950',
'76949', '76948', '76947', '76946', '76945', '76944', '76943', '76942', '76941', '76940',
'76939', '76938', '76937', '76936', '76935', '76934', '76933', '76932', '76931', '76930',
'76929', '76928', '76927', '76926', '76925', '76924', '76923', '76922', '76921', '76920',
'76919', '76918', '76917', '76916', '76915', '76914', '76913', '76912', '76911', '76910',
'76909', '76908', '76907', '76906', '76905', '76904', '76903', '76902', '76901', '76900',
'76899', '76898', '76897', '76896', '76895', '76894', '76893', '76892', '76890',
'76888', '76887', '76886', '76885', '76884', '76883', '76882', '76881', '76880',
'76879', '76878', '76877', '76876', '76875', '76874', '76873', '76872', '76871', '76870',
'76869', '76868', '76867', '76866', '76865', '76864', '76863', '76862', '76861', '76860',
'76859', '76858', '76857', '76856', '76855', '76854', '76853', '76852', '76851', '76850',
'76849', '76848', '76847', '76846', '76845', '76844', '76843', '76842', '76841', '76840',
'76839', '76838', '76837', '76836', '76835', '76834', '76833', '76832', '76831', '76830',
'76829', '76828', '76827', '76826', '76825', '76824', '76823', '76822', '76821', '76820',
'76819', '76818', '76817', '76816', '76815', '76814', '76813', '76812', '76811', '76810',
'76809', '76808', '76807', '76806', '76805', '76804', '76803', '76802', '76801', '76800',
'76799', '76798', '76797', '76796', '76795', '76794', '76793', '76792', '76791', '76790',
'76789', '76788', '76787', '76786', '76785', '76784', '76783', '76782', '76781', '76780',
'76779', '76778', '76777', '76776', '76775', '76774', '76773', '76772', '76771', '76770',
'76769', '76768', '76767', '76766', '76765', '76764', '76763', '76762', '76761', '76760',
'76759', '76758', '76757', '76756', '76755', '76754', '76753', '76752', '76751', '76750',
'76749', '76748', '76747', '76746', '76745', '76744', '76743', '76742', '76741', '76740',
'76739', '76738', '76737', '76736', '76735', '76734', '76733', '76732', '76731', '76730',
'76729', '76728', '76727', '76726', '76725', '76724', '76723', '76722', '76721', '76720',
'76719', '76718', '76717', '76716', '76715', '76714', '76713', '76712', '76711', '76710',
'76709', '76708', '76707', '76706', '76705', '76704', '76703', '76702', '76701', '76700',
'76699', '76698', '76697', '76696', '76695', '76694', '76693', '76692', '76691', '76690',
'76689', '76688', '76687', '76686', '76685', '76684', '76683', '76682', '76681', '76680',
'76679', '76678', '76677', '76676', '76675', '76674', '76673', '76672', '76671', '76670',
'76669', '76668', '76667', '76666', '76665', '76664', '76663', '76662', '76661', '76660',
'76659', '76658', '76657', '76656', '76655', '76654', '76653', '76652', '76651', '76650',
'76649', '76648', '76647', '76646', '76645', '76644', '76643', '76642', '76641', '76640',
'76639', '76638', '76637', '76636', '76635', '76634', '76633', '76632', '76631', '76630',
'76629', '76628', '76627', '76626', '76625', '76624', '76623', '76622', '76621', '76620',
'76619', '76618', '76617', '76616', '76615', '76614', '76613', '76612', '76611', '76610',
'76609', '76608', '76607', '76606', '76605', '76604', '76603', '76602', '76601', '76600',
'76599', '76598', '76597', '76596', '76595', '76594', '76593', '76592', '76591', '76590',
'76589', '76588', '76587', '76586', '76585', '76584', '76583', '76582', '76581', '76580',
'76579', '76578', '76577', '76576', '76575', '76574', '76573', '76572', '76571', '76570',
'76569', '76568', '76567', '76566', '76565', '76564', '76563', '76562', '76561', '76560',
'76559', '76558', '76557', '76556', '76555', '76554', '76553', '76552', '76551', '76550',
'76549', '76548', '76547', '76546', '76545', '76544', '76543', '76542', '76541', '76540',
'76539', '76538', '76537', '76536', '76535', '76534', '76533', '76532', '76531', '76530',
'76529', '76528', '76527', '76526', '76525', '76524', '76523', '76522', '76521', '76520',
'76519', '76518', '76517', '76516', '76515', '76514', '76513', '76512', '76511', '76510',
'76509', '76508', '76507', '76506', '76505', '76504', '76503', '76502', '76501', '76500',
'76499', '76498', '76497', '76496', '76495', '76494', '76493', '76492', '76491', '76490',
'76489', '76488', '76487', '76486', '76485', '76484', '76483', '76482', '76481', '76480',
'76479', '76478', '76477', '76476', '76475', '76474', '76473', '76472', '76471', '76470',
'76469', '76468', '76467', '76466', '76465', '76464', '76463', '76462', '76461', '76460',
'76459', '76458', '76457', '76456', '76455', '76454', '76453', '76452', '76451', '76450',
'76449', '76448', '76447', '76446', '76445', '76444', '76443', '76442', '76441', '76440',
'76439', '76438', '76437', '76436', '76435', '76434', '76433', '76432', '76431', '76430',
'76429', '76428', '76427', '76426', '76425', '76424', '76423', '76422', '76421', '76420',
'76419', '76418', '76417', '76416', '76415', '76414', '76413', '76412', '76411', '76410',
'76409', '76408', '76407', '76406', '76405', '76404', '76403', '76402', '76401', '76400',
'76399', '76398', '76397', '76396', '76395', '76394', '76393', '76392', '76391', '76390',
'76389', '76388', '76387', '76386', '76385', '76384', '76383', '76382', '76381', '76380',
'76379', '76378', '76377', '76376', '76375', '76374', '76373', '76372', '76371', '76370',
'76369', '76368', '76367', '76366', '76365', '76364', '76363', '76362', '76361', '76360',
'76359', '76358', '76357', '76356', '76355', '76354', '76353', '76352', '76351', '76350',
'76349', '76348', '76347', '76346', '76345', '76344', '76343', '76342', '76341', '76340',
'76339', '76338', '76337', '76336', '76335', '76334', '76333', '76332', '76331', '76330',
'76329', '76328', '76327', '76326', '76325', '76324', '76323', '76322', '76321', '76320',
'76319', '76318', '76317', '76316', '76315', '76314', '76313', '76312', '76311', '76310',
'76309', '76308', '76307', '76306', '76305', '76304', '76303', '76302', '76301', '76300',
'76299', '76298', '76297', '76296', '76295', '76294', '76293', '76292', '76291', '76290',
'76289', '76288', '76287', '76286', '76285', '76284', '76283', '76282', '76281', '76280',
'76279', '76278', '76277', '76276', '76275', '76274', '76273', '76272', '76271', '76270',
'76269', '76268', '76267', '76266', '76265', '76264', '76263', '76262', '76261', '76260',
'76259', '76258', '76257', '76256', '76255', '76254', '76253', '76252', '76251', '76250',
'76249', '76248', '76247', '76246', '76245', '76244', '76243', '76242', '76241', '76240',
'76239', '76238', '76237', '76236', '76235', '76234', '76233', '76232', '76231', '76230',
'76229', '76228', '76227', '76226', '76225', '76224', '76223', '76222', '76221', '76220',
'76219', '76218', '76217', '76216', '76215', '76214', '76213', '76212', '76211', '76210',
'76209', '76208', '76207', '76206', '76205', '76204', '76203', '76202', '76201', '76200',
'76199', '76198', '76197', '76196', '76195', '76194', '76193', '76192', '76191', '76190',
'76189', '76188', '76187', '76186', '76185', '76184', '76183', '76182', '76181', '76180',
'76179', '76178', '76177', '76176', '76175', '76174', '76173', '76172', '76171', '76170',
'76169', '76168', '76167', '76166', '76165', '76164', '76163', '76162', '76161', '76160',
'76159', '76158', '76157', '76156', '76155', '76154', '76153', '76152', '76151', '76150',
'76149', '76148', '76147', '76146', '76145', '76144', '76143', '76142', '76141', '76140',
'76139', '76138', '76137', '76136', '76135', '76134', '76133', '76132', '76131', '76130',
'76129', '76128', '76127', '76126', '76125', '76124', '76123', '76122', '76121', '76120',
'76119', '76118', '76117', '76116', '76115', '76114', '76113', '76112', '76111', '76110',
'76109', '76108', '76107', '76106', '76105', '76104', '76103', '76102', '76101', '76100',
'76099', '76098', '76097', '76096', '76095', '76094', '76093', '76092', '76091', '76090',
'76089', '76088', '76087', '76086', '76085', '76084', '76083', '76082', '76081', '76080',
'76079', '76078', '76077', '76076', '76075', '76074', '76073', '76072', '76071', '76070',
'76069', '76068', '76067', '76066', '76065', '76064', '76063', '76062', '76061', '76060',
'76059', '76058', '76057', '76056', '76055', '76054', '76053', '76052', '76051', '76050',
'76049', '76048', '76047', '76046', '76045', '76044', '76043', '76042', '76041', '76040',
'76039', '76038', '76037', '76036', '76035', '76034', '76033', '76032', '76031', '76030',
'76029', '76028', '76027', '76026', '76025', '76024', '76023', '76022', '76021', '76020',
'76019', '76018', '76017', '76016', '76015', '76014', '76013', '76012', '76011', '76010',
'76009', '76008', '76007', '76006', '76005', '76004', '76003', '76002', '76001', '76000',
'75999', '75998', '75997', '75996', '75995', '75994', '75993', '75992', '75991', '75990'
]




# Store results here
results = []

# ---------------- Loop through zip codes ----------------
for zc in zip_codes:
    try:
        print(f"\nProcessing zip code: {zc}")

        # Step 1: Enter zip code
        try:
            zip_input = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-zipcode-input"))
            )
            zip_input.clear()
            zip_input.send_keys(zc + Keys.ENTER)
        except TimeoutException:
            print("Zip input not available, maybe we're already in checkout flow.")

        time.sleep(2)

        # Step 2: Check for available buttons
        try:
            element = WebDriverWait(driver, 5).until(
                EC.any_of(
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-back-button")),
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-change-zipcode-link"))
                )
            )
            # ✅ If found → availability = Yes
            results.append({"zipcode": zc, "availability": "Yes"})

            # Re-find element to avoid stale reference
            element = driver.find_element(By.CLASS_NAME, element.get_attribute("class").split()[0])

            if "gbmc-back-button" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> back button present.")
                element.click()
            elif "gbmc-change-zipcode-link" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> change zip link present.")
                element.click()

        except TimeoutException:
            # ❌ If not found → availability = No
            print(f"Neither back nor change-zip buttons present for zip {zc}, marking as No...")
            results.append({"zipcode": zc, "availability": "No"})

            # Recovery flow
            try:
                headed_back = WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-headed-back-button"))
                )
                headed_back.click()
                time.sleep(1)

                WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
                ).click()
                time.sleep(1)
                print(f"Recovered successfully for zip {zc}")

            except Exception:
                print(f"Recovery failed for zip {zc}")
                continue

    except Exception as e:
        print(f"Unexpected error with zip {zc}: {e}")
        results.append({"zipcode": zc, "availability": "No"})

time.sleep(5)
driver.quit()

# ---------------- Save results ----------------
df = pd.DataFrame(results)
df.to_csv("zipcode_availability25000.csv", index=False)
print("\n✅ Dataset saved as zip_availability.csv")

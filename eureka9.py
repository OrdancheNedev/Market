import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import TimeoutException
import time

# ---------------- Setup ----------------
chrome_options = Options()
chrome_options.add_argument("--start-maximized")

service = Service(r"C:\Users\Lenovo\Downloads\chromedriver-win64 (1)\chromedriver-win64\chromedriver.exe")
driver = webdriver.Chrome(service=service, options=chrome_options)

driver.get("https://www.rewe.de/shop")
time.sleep(3)

# Click initial entry button
WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
).click()

# ---------------- Zip codes list ----------------

zip_codes = ['67829', '67827','67989', '67988', '67987', '67986', '67985', '67984', '67983', '67982', '67981', '67980',
'67979', '67978', '67977', '67976', '67975', '67974', '67973', '67972', '67971', '67970',
'67969', '67968', '67967', '67966', '67965', '67964', '67963', '67962', '67961', '67960',
'67959', '67958', '67957', '67956', '67955', '67954', '67953', '67952', '67951', '67950',
'67949', '67948', '67947', '67946', '67945', '67944', '67943', '67942', '67941', '67940',
'67939', '67938', '67937', '67936', '67935', '67934', '67933', '67932', '67931', '67930',
'67929', '67928', '67927', '67926', '67925', '67924', '67923', '67922', '67921', '67920',
'67919', '67918', '67917', '67916', '67915', '67914', '67913', '67912', '67911', '67910',
'67909', '67908', '67907', '67906', '67905', '67904', '67903', '67902', '67901', '67900',
'67899', '67898', '67897', '67896', '67895', '67894', '67893', '67892', '67891', '67890',
'67889', '67888', '67887', '67886', '67885', '67884', '67883', '67882', '67881', '67880',
'67879', '67878', '67877', '67876', '67875', '67874', '67873', '67872', '67871', '67870',
'67869', '67868', '67867', '67866', '67865', '67864', '67863', '67862', '67861', '67860',
'67859', '67858', '67857', '67856', '67855', '67854', '67853', '67852', '67851', '67850',
'67849', '67848', '67847', '67846', '67845', '67844', '67843', '67842', '67841', '67840',
'67839', '67838', '67837', '67836', '67835', '67834', '67833', '67832', '67831', '67830',
'67829', '67828', '67827', '67826', '67825', '67824', '67823', '67822', '67821', '67820',
'67819', '67818', '67817', '67816', '67815', '67814', '67813', '67812', '67811', '67810',
'67809', '67808', '67807', '67806', '67805', '67804', '67803', '67802', '67801', '67800',
'67799', '67798', '67797', '67796', '67795', '67794', '67793', '67792', '67791', '67790',
'67789', '67788', '67787', '67786', '67785', '67784', '67783', '67782', '67781', '67780',
'67779', '67778', '67777', '67776', '67775', '67774', '67773', '67772', '67771', '67770',
'67769', '67768', '67767', '67766', '67765', '67764', '67763', '67762', '67761', '67760',
'67759', '67758', '67757', '67756', '67755', '67754', '67753', '67752', '67751', '67750',
'67749', '67748', '67747', '67746', '67745', '67744', '67743', '67742', '67741', '67740',
'67739', '67738', '67737', '67736', '67735', '67734', '67733', '67732', '67731', '67730',
'67729', '67728', '67727', '67726', '67725', '67724', '67723', '67722', '67721', '67720',
'67719', '67718', '67717', '67716', '67715', '67714', '67713', '67712', '67711', '67710',
'67709', '67708', '67707', '67706', '67705', '67704', '67703', '67702', '67701', '67700',
'67699', '67698', '67697', '67696', '67695', '67694', '67693', '67692', '67691', '67690',
'67689', '67688', '67687', '67686', '67685', '67684', '67683', '67682', '67681', '67680',
'67679', '67678', '67677', '67676', '67675', '67674', '67673', '67672', '67671', '67670',
'67669', '67668', '67667', '67666', '67665', '67664', '67663', '67662', '67661', '67660',
'67659', '67658', '67657', '67656', '67655', '67654', '67653', '67652', '67651', '67650',
'67649', '67648', '67647', '67646', '67645', '67644', '67643', '67642', '67641', '67640',
'67639', '67638', '67637', '67636', '67635', '67634', '67633', '67632', '67631', '67630',
'67629', '67628', '67627', '67626', '67625', '67624', '67623', '67622', '67621', '67620',
'67619', '67618', '67617', '67616', '67615', '67614', '67613', '67612', '67611', '67610',
'67609', '67608', '67607', '67606', '67605', '67604', '67603', '67602', '67601', '67600',
'67599', '67598', '67597', '67596', '67595', '67594', '67593', '67592', '67591', '67590',
'67589', '67588', '67587', '67586', '67585', '67584', '67583', '67582', '67581', '67580',
'67579', '67578', '67577', '67576', '67575', '67574', '67573', '67572', '67571', '67570',
'67569', '67568', '67567', '67566', '67565', '67564', '67563', '67562', '67561', '67560',
'67559', '67558', '67557', '67556', '67555', '67554', '67553', '67552', '67551', '67550',
'67549', '67548', '67547', '67546', '67545', '67544', '67543', '67542', '67541', '67540',
'67539', '67538', '67537', '67536', '67535', '67534', '67533', '67532', '67531', '67530',
'67529', '67528', '67527', '67526', '67525', '67524', '67523', '67522', '67521', '67520',
'67519', '67518', '67517', '67516', '67515', '67514', '67513', '67512', '67511', '67510',
'67509', '67508', '67507', '67506', '67505', '67504', '67503', '67502', '67501', '67500',
'67499', '67498', '67497', '67496', '67495', '67494', '67493', '67492', '67491', '67490',
'67489', '67488', '67487', '67486', '67485', '67484', '67483', '67482', '67481', '67480',
'67479', '67478', '67477', '67476', '67475', '67474', '67473', '67472', '67471', '67470',
'67469', '67468', '67467', '67466', '67465', '67464', '67463', '67462', '67461', '67460',
'67459', '67458', '67457', '67456', '67455', '67454', '67453', '67452', '67451', '67450',
'67449', '67448', '67447', '67446', '67445', '67444', '67443', '67442', '67441', '67440',
'67439', '67438', '67437', '67436', '67435', '67434', '67433', '67432', '67431', '67430',
'67429', '67428', '67427', '67426', '67425', '67424', '67423', '67422', '67421', '67420',
'67419', '67418', '67417', '67416', '67415', '67414', '67413', '67412', '67411', '67410',
'67409', '67408', '67407', '67406', '67405', '67404', '67403', '67402', '67401', '67400',
'67399', '67398', '67397', '67396', '67395', '67394', '67393', '67392', '67391', '67390',
'67389', '67388', '67387', '67386', '67385', '67384', '67383', '67382', '67381', '67380',
'67379', '67378', '67377', '67376', '67375', '67374', '67373', '67372', '67371', '67370',
'67369', '67368', '67367', '67366', '67365', '67364', '67363', '67362', '67361', '67360',
'67359', '67358', '67357', '67356', '67355', '67354', '67353', '67352', '67351', '67350',
'67349', '67348', '67347', '67346', '67345', '67344', '67343', '67342', '67341', '67340',
'67339', '67338', '67337', '67336', '67335', '67334', '67333', '67332', '67331', '67330',
'67329', '67328', '67327', '67326', '67325', '67324', '67323', '67322', '67321', '67320',
'67319', '67318', '67317', '67316', '67315', '67314', '67313', '67312', '67311', '67310',
'67309', '67308', '67307', '67306', '67305', '67304', '67303', '67302', '67301', '67300',
'67299', '67298', '67297', '67296', '67295', '67294', '67293', '67292', '67291', '67290',
'67289', '67288', '67287', '67286', '67285', '67284', '67283', '67282', '67281', '67280',
'67279', '67278', '67277', '67276', '67275', '67274', '67273', '67272', '67271', '67270',
'67269', '67268', '67267', '67266', '67265', '67264', '67263', '67262', '67261', '67260',
'67259', '67258', '67257', '67256', '67255', '67254', '67253', '67252', '67251', '67250',
'67249', '67248', '67247', '67246', '67245', '67244', '67243', '67242', '67241', '67240',
'67239', '67238', '67237', '67236', '67235', '67234', '67233', '67232', '67231', '67230',
'67229', '67228', '67227', '67226', '67225', '67224', '67223', '67222', '67221', '67220',
'67219', '67218', '67217', '67216', '67215', '67214', '67213', '67212', '67211', '67210',
'67209', '67208', '67207', '67206', '67205', '67204', '67203', '67202', '67201', '67200',
'67199', '67198', '67197', '67196', '67195', '67194', '67193', '67192', '67191', '67190',
'67189', '67188', '67187', '67186', '67185', '67184', '67183', '67182', '67181', '67180',
'67179', '67178', '67177', '67176', '67175', '67174', '67173', '67172', '67171', '67170',
'67169', '67168', '67167', '67166', '67165', '67164', '67163', '67162', '67161', '67160',
'67159', '67158', '67157', '67156', '67155', '67154', '67153', '67152', '67151', '67150',
'67149', '67148', '67147', '67146', '67145', '67144', '67143', '67142', '67141', '67140',
'67139', '67138', '67137', '67136', '67135', '67134', '67133', '67132', '67131', '67130',
'67129', '67128', '67127', '67126', '67125', '67124', '67123', '67122', '67121', '67120',
'67119', '67118', '67117', '67116', '67115', '67114', '67113', '67112', '67111', '67110',
'67109', '67108', '67107', '67106', '67105', '67104', '67103', '67102', '67101', '67100',
'67099', '67098', '67097', '67096', '67095', '67094', '67093', '67092', '67091', '67090',
'67089', '67088', '67087', '67086', '67085', '67084', '67083', '67082', '67081', '67080',
'67079', '67078', '67077', '67076', '67075', '67074', '67073', '67072', '67071', '67070',
'67069', '67068', '67067', '67066', '67065', '67064', '67063', '67062', '67061', '67060',
'67059', '67058', '67057', '67056', '67055', '67054', '67053', '67052', '67051', '67050',
'67049', '67048', '67047', '67046', '67045', '67044', '67043', '67042', '67041', '67040',
'67039', '67038', '67037', '67036', '67035', '67034', '67033', '67032', '67031', '67030',
'67029', '67028', '67027', '67026', '67025', '67024', '67023', '67022', '67021', '67020',
'67019', '67018', '67017', '67016', '67015', '67014', '67013', '67012', '67011', '67010',
'67009', '67008', '67007', '67006', '67005', '67004', '67003', '67002', '67001', '67000',
'66999', '66998', '66997', '66996', '66995', '66994', '66993', '66992', '66991', '66990']


# Store results here
results = []

# ---------------- Loop through zip codes ----------------
for zc in zip_codes:
    try:
        print(f"\nProcessing zip code: {zc}")

        # Step 1: Enter zip code
        try:
            zip_input = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-zipcode-input"))
            )
            zip_input.clear()
            zip_input.send_keys(zc + Keys.ENTER)
        except TimeoutException:
            print("Zip input not available, maybe we're already in checkout flow.")

        time.sleep(2)

        # Step 2: Check for available buttons
        try:
            element = WebDriverWait(driver, 5).until(
                EC.any_of(
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-back-button")),
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-change-zipcode-link"))
                )
            )
            # ✅ If found → availability = Yes
            results.append({"zipcode": zc, "availability": "Yes"})

            # Re-find element to avoid stale reference
            element = driver.find_element(By.CLASS_NAME, element.get_attribute("class").split()[0])

            if "gbmc-back-button" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> back button present.")
                element.click()
            elif "gbmc-change-zipcode-link" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> change zip link present.")
                element.click()

        except TimeoutException:
            # ❌ If not found → availability = No
            print(f"Neither back nor change-zip buttons present for zip {zc}, marking as No...")
            results.append({"zipcode": zc, "availability": "No"})

            # Recovery flow
            try:
                headed_back = WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-headed-back-button"))
                )
                headed_back.click()
                time.sleep(1)

                WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
                ).click()
                time.sleep(1)
                print(f"Recovered successfully for zip {zc}")

            except Exception:
                print(f"Recovery failed for zip {zc}")
                continue

    except Exception as e:
        print(f"Unexpected error with zip {zc}: {e}")
        results.append({"zipcode": zc, "availability": "No"})

time.sleep(5)
driver.quit()

# ---------------- Save results ----------------
df = pd.DataFrame(results)
df.to_csv("zipcode_availability34000.csv", index=False)
print("\n✅ Dataset saved as zip_availability.csv")

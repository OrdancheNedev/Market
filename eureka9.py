import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import TimeoutException
import time

# ---------------- Setup ----------------
chrome_options = Options()
chrome_options.add_argument("--start-maximized")

service = Service(r"C:\Users\Lenovo\Downloads\chromedriver-win64 (1)\chromedriver-win64\chromedriver.exe")
driver = webdriver.Chrome(service=service, options=chrome_options)

driver.get("https://www.rewe.de/shop")
time.sleep(3)

# Click initial entry button
WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
).click()

# ---------------- Zip codes list ----------------

zip_codes = [
'74889', '74869'  '74989', '74988', '74987', '74986', '74985', '74984', '74983', '74982', '74981', '74980',
'74979', '74978', '74977', '74976', '74975', '74974', '74973', '74972', '74971', '74970',
'74969', '74968', '74967', '74966', '74965', '74964', '74963', '74962', '74961', '74960',
'74959', '74958', '74957', '74956', '74955', '74954', '74953', '74952', '74951', '74950',
'74949', '74948', '74947', '74946', '74945', '74944', '74943', '74942', '74941', '74940',
'74939', '74938', '74937', '74936', '74935', '74934', '74933', '74932', '74931', '74930',
'74929', '74928', '74927', '74926', '74925', '74924', '74923', '74922', '74921', '74920',
'74919', '74918', '74917', '74916', '74915', '74914', '74913', '74912', '74911', '74910',
'74909', '74908', '74907', '74906', '74905', '74904', '74903', '74902', '74901', '74900',
'74899', '74898', '74897', '74896', '74895', '74894', '74893', '74892', '74891', '74890',
'74889', '74888', '74887', '74886', '74885', '74884', '74883', '74882', '74881', '74880',
'74879', '74878', '74877', '74876', '74875', '74874', '74873', '74872', '74871', '74870',
'74869', '74868', '74867', '74866', '74865', '74864', '74863', '74862', '74861', '74860',
'74859', '74858', '74857', '74856', '74855', '74854', '74853', '74852', '74851', '74850',
'74849', '74848', '74847', '74846', '74845', '74844', '74843', '74842', '74841', '74840',
'74839', '74838', '74837', '74836', '74835', '74834', '74833', '74832', '74831', '74830',
'74829', '74828', '74827', '74826', '74825', '74824', '74823', '74822', '74821', '74820',
'74819', '74818', '74817', '74816', '74815', '74814', '74813', '74812', '74811', '74810',
'74809', '74808', '74807', '74806', '74805', '74804', '74803', '74802', '74801', '74800',
'74799', '74798', '74797', '74796', '74795', '74794', '74793', '74792', '74791', '74790',
'74789', '74788', '74787', '74786', '74785', '74784', '74783', '74782', '74781', '74780',
'74779', '74778', '74777', '74776', '74775', '74774', '74773', '74772', '74771', '74770',
'74769', '74768', '74767', '74766', '74765', '74764', '74763', '74762', '74761', '74760',
'74759', '74758', '74757', '74756', '74755', '74754', '74753', '74752', '74751', '74750',
'74749', '74748', '74747', '74746', '74745', '74744', '74743', '74742', '74741', '74740',
'74739', '74738', '74737', '74736', '74735', '74734', '74733', '74732', '74731', '74730',
'74729', '74728', '74727', '74726', '74725', '74724', '74723', '74722', '74721', '74720',
'74719', '74718', '74717', '74716', '74715', '74714', '74713', '74712', '74711', '74710',
'74709', '74708', '74707', '74706', '74705', '74704', '74703', '74702', '74701', '74700',
'74699', '74698', '74697', '74696', '74695', '74694', '74693', '74692', '74691', '74690',
'74689', '74688', '74687', '74686', '74685', '74684', '74683', '74682', '74681', '74680',
'74679', '74678', '74677', '74676', '74675', '74674', '74673', '74672', '74671', '74670',
'74669', '74668', '74667', '74666', '74665', '74664', '74663', '74662', '74661', '74660',
'74659', '74658', '74657', '74656', '74655', '74654', '74653', '74652', '74651', '74650',
'74649', '74648', '74647', '74646', '74645', '74644', '74643', '74642', '74641', '74640',
'74639', '74638', '74637', '74636', '74635', '74634', '74633', '74632', '74631', '74630',
'74629', '74628', '74627', '74626', '74625', '74624', '74623', '74622', '74621', '74620',
'74619', '74618', '74617', '74616', '74615', '74614', '74613', '74612', '74611', '74610',
'74609', '74608', '74607', '74606', '74605', '74604', '74603', '74602', '74601', '74600',
'74599', '74598', '74597', '74596', '74595', '74594', '74593', '74592', '74591', '74590',
'74589', '74588', '74587', '74586', '74585', '74584', '74583', '74582', '74581', '74580',
'74579', '74578', '74577', '74576', '74575', '74574', '74573', '74572', '74571', '74570',
'74569', '74568', '74567', '74566', '74565', '74564', '74563', '74562', '74561', '74560',
'74559', '74558', '74557', '74556', '74555', '74554', '74553', '74552', '74551', '74550',
'74549', '74548', '74547', '74546', '74545', '74544', '74543', '74542', '74541', '74540',
'74539', '74538', '74537', '74536', '74535', '74534', '74533', '74532', '74531', '74530',
'74529', '74528', '74527', '74526', '74525', '74524', '74523', '74522', '74521', '74520',
'74519', '74518', '74517', '74516', '74515', '74514', '74513', '74512', '74511', '74510',
'74509', '74508', '74507', '74506', '74505', '74504', '74503', '74502', '74501', '74500',
'74499', '74498', '74497', '74496', '74495', '74494', '74493', '74492', '74491', '74490',
'74489', '74488', '74487', '74486', '74485', '74484', '74483', '74482', '74481', '74480',
'74479', '74478', '74477', '74476', '74475', '74474', '74473', '74472', '74471', '74470',
'74469', '74468', '74467', '74466', '74465', '74464', '74463', '74462', '74461', '74460',
'74459', '74458', '74457', '74456', '74455', '74454', '74453', '74452', '74451', '74450',
'74449', '74448', '74447', '74446', '74445', '74444', '74443', '74442', '74441', '74440',
'74439', '74438', '74437', '74436', '74435', '74434', '74433', '74432', '74431', '74430',
'74429', '74428', '74427', '74426', '74425', '74424', '74423', '74422', '74421', '74420',
'74419', '74418', '74417', '74416', '74415', '74414', '74413', '74412', '74411', '74410',
'74409', '74408', '74407', '74406', '74405', '74404', '74403', '74402', '74401', '74400',
'74399', '74398', '74397', '74396', '74395', '74394', '74393', '74392', '74391', '74390',
'74389', '74388', '74387', '74386', '74385', '74384', '74383', '74382', '74381', '74380',
'74379', '74378', '74377', '74376', '74375', '74374', '74373', '74372', '74371', '74370',
'74369', '74368', '74367', '74366', '74365', '74364', '74363', '74362', '74361', '74360',
'74359', '74358', '74357', '74356', '74355', '74354', '74353', '74352', '74351', '74350',
'74349', '74348', '74347', '74346', '74345', '74344', '74343', '74342', '74341', '74340',
'74339', '74338', '74337', '74336', '74335', '74334', '74333', '74332', '74331', '74330',
'74329', '74328', '74327', '74326', '74325', '74324', '74323', '74322', '74321', '74320',
'74319', '74318', '74317', '74316', '74315', '74314', '74313', '74312', '74311', '74310',
'74309', '74308', '74307', '74306', '74305', '74304', '74303', '74302', '74301', '74300',
'74299', '74298', '74297', '74296', '74295', '74294', '74293', '74292', '74291', '74290',
'74289', '74288', '74287', '74286', '74285', '74284', '74283', '74282', '74281', '74280',
'74279', '74278', '74277', '74276', '74275', '74274', '74273', '74272', '74271', '74270',
'74269', '74268', '74267', '74266', '74265', '74264', '74263', '74262', '74261', '74260',
'74259', '74258', '74257', '74256', '74255', '74254', '74253', '74252', '74251', '74250',
'74249', '74248', '74247', '74246', '74245', '74244', '74243', '74242', '74241', '74240',
'74239', '74238', '74237', '74236', '74235', '74234', '74233', '74232', '74231', '74230',
'74229', '74228', '74227', '74226', '74225', '74224', '74223', '74222', '74221', '74220',
'74219', '74218', '74217', '74216', '74215', '74214', '74213', '74212', '74211', '74210',
'74209', '74208', '74207', '74206', '74205', '74204', '74203', '74202', '74201', '74200',
'74199', '74198', '74197', '74196', '74195', '74194', '74193', '74192', '74191', '74190',
'74189', '74188', '74187', '74186', '74185', '74184', '74183', '74182', '74181', '74180',
'74179', '74178', '74177', '74176', '74175', '74174', '74173', '74172', '74171', '74170',
'74169', '74168', '74167', '74166', '74165', '74164', '74163', '74162', '74161', '74160',
'74159', '74158', '74157', '74156', '74155', '74154', '74153', '74152', '74151', '74150',
'74149', '74148', '74147', '74146', '74145', '74144', '74143', '74142', '74141', '74140',
'74139', '74138', '74137', '74136', '74135', '74134', '74133', '74132', '74131', '74130',
'74129', '74128', '74127', '74126', '74125', '74124', '74123', '74122', '74121', '74120',
'74119', '74118', '74117', '74116', '74115', '74114', '74113', '74112', '74111', '74110',
'74109', '74108', '74107', '74106', '74105', '74104', '74103', '74102', '74101', '74100',
'74099', '74098', '74097', '74096', '74095', '74094', '74093', '74092', '74091', '74090',
'74089', '74088', '74087', '74086', '74085', '74084', '74083', '74082', '74081', '74080',
'74079', '74078', '74077', '74076', '74075', '74074', '74073', '74072', '74071', '74070',
'74069', '74068', '74067', '74066', '74065', '74064', '74063', '74062', '74061', '74060',
'74059', '74058', '74057', '74056', '74055', '74054', '74053', '74052', '74051', '74050',
'74049', '74048', '74047', '74046', '74045', '74044', '74043', '74042', '74041', '74040',
'74039', '74038', '74037', '74036', '74035', '74034', '74033', '74032', '74031', '74030',
'74029', '74028', '74027', '74026', '74025', '74024', '74023', '74022', '74021', '74020',
'74019', '74018', '74017', '74016', '74015', '74014', '74013', '74012', '74011', '74010',
'74009', '74008', '74007', '74006', '74005', '74004', '74003', '74002', '74001', '74000',
'73999', '73998', '73997', '73996', '73995', '73994', '73993', '73992', '73991', '73990'
]



# Store results here
results = []

# ---------------- Loop through zip codes ----------------
for zc in zip_codes:
    try:
        print(f"\nProcessing zip code: {zc}")

        # Step 1: Enter zip code
        try:
            zip_input = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-zipcode-input"))
            )
            zip_input.clear()
            zip_input.send_keys(zc + Keys.ENTER)
        except TimeoutException:
            print("Zip input not available, maybe we're already in checkout flow.")

        time.sleep(2)

        # Step 2: Check for available buttons
        try:
            element = WebDriverWait(driver, 5).until(
                EC.any_of(
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-back-button")),
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-change-zipcode-link"))
                )
            )
            # ✅ If found → availability = Yes
            results.append({"zipcode": zc, "availability": "Yes"})

            # Re-find element to avoid stale reference
            element = driver.find_element(By.CLASS_NAME, element.get_attribute("class").split()[0])

            if "gbmc-back-button" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> back button present.")
                element.click()
            elif "gbmc-change-zipcode-link" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> change zip link present.")
                element.click()

        except TimeoutException:
            # ❌ If not found → availability = No
            print(f"Neither back nor change-zip buttons present for zip {zc}, marking as No...")
            results.append({"zipcode": zc, "availability": "No"})

            # Recovery flow
            try:
                headed_back = WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-headed-back-button"))
                )
                headed_back.click()
                time.sleep(1)

                WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
                ).click()
                time.sleep(1)
                print(f"Recovered successfully for zip {zc}")

            except Exception:
                print(f"Recovery failed for zip {zc}")
                continue

    except Exception as e:
        print(f"Unexpected error with zip {zc}: {e}")
        results.append({"zipcode": zc, "availability": "No"})

time.sleep(5)
driver.quit()

# ---------------- Save results ----------------
df = pd.DataFrame(results)
df.to_csv("zipcode_availability27000.csv", index=False)
print("\n✅ Dataset saved as zip_availability.csv")

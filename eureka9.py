import pandas as pd
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import TimeoutException
import time

# ---------------- Setup ----------------
chrome_options = Options()
chrome_options.add_argument("--start-maximized")

service = Service(r"C:\Users\Lenovo\Downloads\chromedriver-win64 (1)\chromedriver-win64\chromedriver.exe")
driver = webdriver.Chrome(service=service, options=chrome_options)

driver.get("https://www.rewe.de/shop")
time.sleep(3)

# Click initial entry button
WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
).click()

# ---------------- Zip codes list ----------------

zip_codes = numbers = [
"64859","64853","64989","64988","64987","64986","64985","64984","64983","64982","64981","64980",
"64979","64978","64977","64976","64975","64974","64973","64972","64971","64970",
"64969","64968","64967","64966","64965","64964","64963","64962","64961","64960",
"64959","64958","64957","64956","64955","64954","64953","64952","64951","64950",
"64949","64948","64947","64946","64945","64944","64943","64942","64941","64940",
"64939","64938","64937","64936","64935","64934","64933","64932","64931","64930",
"64929","64928","64927","64926","64925","64924","64923","64922","64921","64920",
"64919","64918","64917","64916","64915","64914","64913","64912","64911","64910",
"64909","64908","64907","64906","64905","64904","64903","64902","64901","64900",
"64899","64898","64897","64896","64895","64894","64893","64892","64891","64890",
"64889","64888","64887","64886","64885","64884","64883","64882","64881","64880",
"64879","64878","64877","64876","64875","64874","64873","64872","64871","64870",
"64869","64868","64867","64866","64865","64864","64863","64862","64861","64860",
"64859","64858","64857","64856","64855","64854","64853","64852","64851","64850",
"64849","64848","64847","64846","64845","64844","64843","64842","64841","64840",
"64839","64838","64837","64836","64835","64834","64833","64832","64831","64830",
"64829","64828","64827","64826","64825","64824","64823","64822","64821","64820",
"64819","64818","64817","64816","64815","64814","64813","64812","64811","64810",
"64809","64808","64807","64806","64805","64804","64803","64802","64801","64800",
"64799","64798","64797","64796","64795","64794","64793","64792","64791","64790",
"64789","64788","64787","64786","64785","64784","64783","64782","64781","64780",
"64779","64778","64777","64776","64775","64774","64773","64772","64771","64770",
"64769","64768","64767","64766","64765","64764","64763","64762","64761","64760",
"64759","64758","64757","64756","64755","64754","64753","64752","64751","64750",
"64749","64748","64747","64746","64745","64744","64743","64742","64741","64740",
"64739","64738","64737","64736","64735","64734","64733","64732","64731","64730",
"64729","64728","64727","64726","64725","64724","64723","64722","64721","64720",
"64719","64718","64717","64716","64715","64714","64713","64712","64711","64710",
"64709","64708","64707","64706","64705","64704","64703","64702","64701","64700",
"64699","64698","64697","64696","64695","64694","64693","64692","64691","64690",
"64689","64688","64687","64686","64685","64684","64683","64682","64681","64680",
"64679","64678","64677","64676","64675","64674","64673","64672","64671","64670",
"64669","64668","64667","64666","64665","64664","64663","64662","64661","64660",
"64659","64658","64657","64656","64655","64654","64653","64652","64651","64650",
"64649","64648","64647","64646","64645","64644","64643","64642","64641","64640",
"64639","64638","64637","64636","64635","64634","64633","64632","64631","64630",
"64629","64628","64627","64626","64625","64624","64623","64622","64621","64620",
"64619","64618","64617","64616","64615","64614","64613","64612","64611","64610",
"64609","64608","64607","64606","64605","64604","64603","64602","64601","64600",
"64599","64598","64597","64596","64595","64594","64593","64592","64591","64590",
"64589","64588","64587","64586","64585","64584","64583","64582","64581","64580",
"64579","64578","64577","64576","64575","64574","64573","64572","64571","64570",
"64569","64568","64567","64566","64565","64564","64563","64562","64561","64560",
"64559","64558","64557","64556","64555","64554","64553","64552","64551","64550",
"64549","64548","64547","64546","64545","64544","64543","64542","64541","64540",
"64539","64538","64537","64536","64535","64534","64533","64532","64531","64530",
"64529","64528","64527","64526","64525","64524","64523","64522","64521","64520",
"64519","64518","64517","64516","64515","64514","64513","64512","64511","64510",
"64509","64508","64507","64506","64505","64504","64503","64502","64501","64500",
"64499","64498","64497","64496","64495","64494","64493","64492","64491","64490",
"64489","64488","64487","64486","64485","64484","64483","64482","64481","64480",
"64479","64478","64477","64476","64475","64474","64473","64472","64471","64470",
"64469","64468","64467","64466","64465","64464","64463","64462","64461","64460",
"64459","64458","64457","64456","64455","64454","64453","64452","64451","64450",
"64449","64448","64447","64446","64445","64444","64443","64442","64441","64440",
"64439","64438","64437","64436","64435","64434","64433","64432","64431","64430",
"64429","64428","64427","64426","64425","64424","64423","64422","64421","64420",
"64419","64418","64417","64416","64415","64414","64413","64412","64411","64410",
"64409","64408","64407","64406","64405","64404","64403","64402","64401","64400",
"64399","64398","64397","64396","64395","64394","64393","64392","64391","64390",
"64389","64388","64387","64386","64385","64384","64383","64382","64381","64380",
"64379","64378","64377","64376","64375","64374","64373","64372","64371","64370",
"64369","64368","64367","64366","64365","64364","64363","64362","64361","64360",
"64359","64358","64357","64356","64355","64354","64353","64352","64351","64350",
"64349","64348","64347","64346","64345","64344","64343","64342","64341","64340",
"64339","64338","64337","64336","64335","64334","64333","64332","64331","64330",
"64329","64328","64327","64326","64325","64324","64323","64322","64321","64320",
"64319","64318","64317","64316","64315","64314","64313","64312","64311","64310",
"64309","64308","64307","64306","64305","64304","64303","64302","64301","64300",
"64299","64298","64297","64296","64295","64294","64293","64292","64291","64290",
"64289","64288","64287","64286","64285","64284","64283","64282","64281","64280",
"64279","64278","64277","64276","64275","64274","64273","64272","64271","64270",
"64269","64268","64267","64266","64265","64264","64263","64262","64261","64260",
"64259","64258","64257","64256","64255","64254","64253","64252","64251","64250",
"64249","64248","64247","64246","64245","64244","64243","64242","64241","64240",
"64239","64238","64237","64236","64235","64234","64233","64232","64231","64230",
"64229","64228","64227","64226","64225","64224","64223","64222","64221","64220",
"64219","64218","64217","64216","64215","64214","64213","64212","64211","64210",
"64209","64208","64207","64206","64205","64204","64203","64202","64201","64200",
"64199","64198","64197","64196","64195","64194","64193","64192","64191","64190",
"64189","64188","64187","64186","64185","64184","64183","64182","64181","64180",
"64179","64178","64177","64176","64175","64174","64173","64172","64171","64170",
"64169","64168","64167","64166","64165","64164","64163","64162","64161","64160",
"64159","64158","64157","64156","64155","64154","64153","64152","64151","64150",
"64149","64148","64147","64146","64145","64144","64143","64142","64141","64140",
"64139","64138","64137","64136","64135","64134","64133","64132","64131","64130",
"64129","64128","64127","64126","64125","64124","64123","64122","64121","64120",
"64119","64118","64117","64116","64115","64114","64113","64112","64111","64110",
"64109","64108","64107","64106","64105","64104","64103","64102","64101","64100",
"64099","64098","64097","64096","64095","64094","64093","64092","64091","64090",
"64089","64088","64087","64086","64085","64084","64083","64082","64081","64080",
"64079","64078","64077","64076","64075","64074","64073","64072","64071","64070",
"64069","64068","64067","64066","64065","64064","64063","64062","64061","64060",
"64059","64058","64057","64056","64055","64054","64053","64052","64051","64050",
"64049","64048","64047","64046","64045","64044","64043","64042","64041","64040",
"64039","64038","64037","64036","64035","64034","64033","64032","64031","64030",
"64029","64028","64027","64026","64025","64024","64023","64022","64021","64020",
"64019","64018","64017","64016","64015","64014","64013","64012","64011","64010",
"64009","64008","64007","64006","64005","64004","64003","64002","64001","64000",
"63999","63998","63997","63996","63995","63994","63993","63992","63991","63990"
]



# Store results here
results = []

# ---------------- Loop through zip codes ----------------
for zc in zip_codes:
    try:
        print(f"\nProcessing zip code: {zc}")

        # Step 1: Enter zip code
        try:
            zip_input = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-zipcode-input"))
            )
            zip_input.clear()
            zip_input.send_keys(zc + Keys.ENTER)
        except TimeoutException:
            print("Zip input not available, maybe we're already in checkout flow.")

        time.sleep(2)

        # Step 2: Check for available buttons
        try:
            element = WebDriverWait(driver, 5).until(
                EC.any_of(
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-back-button")),
                    EC.presence_of_element_located((By.CLASS_NAME, "gbmc-change-zipcode-link"))
                )
            )
            # ✅ If found → availability = Yes
            results.append({"zipcode": zc, "availability": "Yes"})

            # Re-find element to avoid stale reference
            element = driver.find_element(By.CLASS_NAME, element.get_attribute("class").split()[0])

            if "gbmc-back-button" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> back button present.")
                element.click()
            elif "gbmc-change-zipcode-link" in element.get_attribute("class"):
                print(f"Zip {zc} accepted -> change zip link present.")
                element.click()

        except TimeoutException:
            # ❌ If not found → availability = No
            print(f"Neither back nor change-zip buttons present for zip {zc}, marking as No...")
            results.append({"zipcode": zc, "availability": "No"})

            # Recovery flow
            try:
                headed_back = WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.CLASS_NAME, "gbmc-headed-back-button"))
                )
                headed_back.click()
                time.sleep(1)

                WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.ID, "intentionButtonList"))
                ).click()
                time.sleep(1)
                print(f"Recovered successfully for zip {zc}")

            except Exception:
                print(f"Recovery failed for zip {zc}")
                continue

    except Exception as e:
        print(f"Unexpected error with zip {zc}: {e}")
        results.append({"zipcode": zc, "availability": "No"})

time.sleep(5)
driver.quit()

# ---------------- Save results ----------------
df = pd.DataFrame(results)
df.to_csv("zipcode_availability37000.csv", index=False)
print("\n✅ Dataset saved as zip_availability.csv")
